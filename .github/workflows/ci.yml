name: Node.js CI
# before I forget.. if the 'Kill previous process' task hangs due to a non-successful kill command,
# I should swap out the &&'s for ;'s which will execute the next line despite the previous line not getting a success.
# If that doesn't work, try (command1 &) ; (command2 &), with a wait at the end to wait for these processes.

#TODO: make a function that concatenates asynchronous .sh commands by reading an array from config files (file for each name: step). 
#      Make a function that wraps concatenated commands in SSH and EOF.
# TODO: does webfactory actually do anything? i've been manually adding my ssh key, I should try with the webfactory step removed.
on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [19.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3 
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.BUTLER_ORACLE_SSH }}
      - name: Add Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          echo "${{ secrets.BUTLER_ORACLE_SSH }}" > ~/.ssh/id_rsa
      - name: Validate IP exists in Github
        run: |
          LOCAL_SERVER_IP=${{ secrets.SERVER_IP }}
          echo "SERVER_IP=$LOCAL_SERVER_IP" >> $GITHUB_ENV

          if [ -z "$LOCAL_SERVER_IP" ]; then
              echo "Error: SERVER_IP is not set."
              exit 1
          fi  
      - name: Ensure executable
        run: chmod +x ./ci-logic/run-step.sh
      - name: Kill Previous Process
        timeout-minutes: 1
        run: ./ci-logic/run-step.sh "$SERVER_IP" "ci-logic/kill_prev_step.txt"
      - name: Pull changes, install deps and deploy.
        timeout-minutes: 1
        run: |
          ssh -tt -o StrictHostKeyChecking=no ubuntu@${{ secrets.SERVER_IP }} <<'EOF'
            cd ~ 
            git pull 
            yarn 
            sudo nohup yarn start > output.log 2>&1 &
            disown 
            exit 0
          EOF

